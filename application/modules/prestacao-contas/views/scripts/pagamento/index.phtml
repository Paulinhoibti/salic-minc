<div class="container-fluid">
    <div class="page-title">
        <div class="row">
            <div class="col s12 m9 l10">
                <h1>Prestação de Contas: Comprovação Financeira</h1>
            </div>
            <div class="col s12 m3 l2 right-align">
                <a href="javascript:voltar();" title="Página Anterior" class="btn small grey lighten-3 grey-text z-depth-0 chat-toggle">
                    <i class="material-icons">keyboard_return</i>
                </a>
            </div>
        </div>
    </div>
    <div class="row" >
        <div class="col s12 m12">
            <div class="card horizontal">
                <div class="card-stacked">
                    <div class="center-align card-content  lighten-4">
                        <span class="card-title"><?php echo $this->pronac . " - " . $this->nomeProjeto ?></span>
                    </div>
                    <div class="card-panel teal">
                        <span class="white-text" style="font-weight: bold; font-size: medium">
                             <table>
                                <tbody>
                                    <tr>
                                        <td>Valor Aprovado</td>
                                        <td>R$ <?php echo number_format($this->vlAprovado, 2, ',', '.') ?></td>
                                    </tr>
                                    <tr>
                                        <td>Valor Comprovado</td>
                                        <td>R$ <?php echo number_format($this->vlComprovado, 2, ',', '.') ?></td>
                                    </tr>
                                    <tr>
                                        <td>Valor a Comprovar</td>
                                        <td>R$ <?php echo number_format($this->vlTotalComprovar, 2, ',', '.') ?></td>
                                    </tr>
                                </tbody>
                            </table>
                        </span>
                    </div>
                    <div class="card-action">
                    <a href="/consultardadosprojeto/index?idPronac=<?php echo $this->idpronac?>" target="_blank" class="btn waves-effect waves-dark white-text">Ver Projeto</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="app">
        <div class="col s12 m12">
                        <dados idpronac="<?php echo $this->idpronac ?>"></dados>
        </div>
    </div>
    <div class="row">
        <div class="col s6 m12">
            <div class="card-panel teal">
                <span class="white-text" style="font-weight: bold; font-size: medium">
                    <table>
                        <tbody>
                            <tr>
                                <td>Valor Aprovado</td>
                                <td>R$ <?php echo number_format($this->vlAprovado, 2, ',', '.') ?></td>
                            </tr>
                            <tr>
                                <td>Valor Comprovado</td>
                                <td>R$ <?php echo number_format($this->vlComprovado, 2, ',', '.') ?></td>
                            </tr>
                            <tr>
                                <td>Valor a Comprovar</td>
                                <td>R$ <?php echo number_format($this->vlTotalComprovar, 2, ',', '.') ?></td>
                            </tr>
                        </tbody>
                    </table>
                </span>
            </div>
        </div>
    </div>
</div>
<div class="fixed-action-btn">
    <a id="ir-para-o-topo" class="btn-floating yellow darken-1 tooltipped" data-tooltip="Ir para o topo">
        <i class="material-icons">arrow_upward</i>
    </a>
</div>
<!-- vendor -->
<script src="/public/js/vue.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.4/numeral.min.js" type="text/javascript"></script>
<!-- vendor -->

<!-- views -->
<script>
    (function (global, factory) {
        if (typeof define === 'function' && define.amd) {
            define(['../numeral'], factory);
        } else if (typeof module === 'object' && module.exports) {
            factory(require('../numeral'));
        } else {
            factory(global.numeral);
        }
    }(this, function (numeral) {
        numeral.register('locale', 'pt-br', {
            delimiters: {
                thousands: '.',
                decimal: ','
            },
            abbreviations: {
                thousand: 'mil',
                million: 'milhões',
                billion: 'b',
                trillion: 't'
            },
            ordinal: function (number) {
                return 'º';
            },
            currency: {
                symbol: 'R$'
            }
        });
    }));

    numeral.locale('pt-br');

    function converteParaReal(value) {
        value = parseFloat(value);
        return numeral(value).format('0,0.00');
    }

    Vue.component('produtos-pagamento', {
        props: ['produtos', 'idpronac'],
        template: `<ul class="collapsible no-margin" data-collapsible="expandable" id="produtos-collapsible">
                        <li class="active" v-for="produto in produtos">
                            <div class="collapsible-header green-text active">
                                <i class="material-icons">perm_media</i>
                                {{ produto.produto }}
                            </div>
                            <div class="collapsible-body no-padding">
                                <ul class="collapsible no-margin no-border" data-collapsible="expandable">
                                    <etapas-pagamento
                                            :etapa="etapa"
                                            v-for="(etapa, index) in produto.etapa"
                                            :idpronac="idpronac"
                                            :cdProduto="produto.cdProduto"
                                            :key="index"
                                    ></etapas-pagamento>
                                </ul>
                            </div>
                        </li>
                    </ul>`,
        mounted: function () {
            this.iniciarCollapsible();
        },
        methods: {
            iniciarCollapsible: function () {
                $3('#produtos-collapsible.collapsible').each(function() {
                    $3(this).collapsible();
                });
            }
        }
    })
    Vue.component('etapas-pagamento', {
        props: ['etapa', 'cdProduto', 'idpronac'],
        template: `<li class="active">
                        <div class="collapsible-header orange-text active" style="padding-left: 30px;">
                            <i class="material-icons">label</i>
                            {{ etapa.etapa }}
                        </div>
                        <div class="collapsible-body no-padding">
                            <ul class="collapsible no-margin no-border" data-collapsible="expandable">
                                    <ufs-pagamento
                                        v-for="(estado, index) in etapa.UF"
                                        :idpronac="idpronac"
                                        :estado="estado"
                                        :cdEtapa="etapa.cdEtapa"
                                        :cdProduto="cdProduto"
                                        :key="index"
                                    ></ufs-pagamento>
                            </ul>
                        </div>
                    </li>
                   `,
        mounted: function () {
            this.iniciarCollapsible();
        },
        methods: {
            iniciarCollapsible: function () {
                $3('.collapsible').each(function() {
                    $3(this).collapsible();
                    console.log(this);
                });
            }
        }
    })
    Vue.component('ufs-pagamento', {
        props: ['estado', 'cdEtapa', 'cdProduto', 'idpronac'],
        template: ` <li class="active">
                        <div class="collapsible-header blue-text active" style="padding-left: 50px;">
                            <i class="material-icons">place</i>
                            {{ estado.Uf }}
                        </div>
                        <div class="collapsible-body no-padding">
                            <ul class="collapsible no-margin no-border" data-collapsible="expandable">
                                    <cidades-pagamento
                                        v-for="(cidade, index) in estado.cidade"
                                        :cidade="cidade"
                                        :idpronac="idpronac"
                                        :uf="estado.Uf"
                                        :cdEtapa="cdEtapa"
                                        :cdProduto="cdProduto"
                                        :key="estado.cdUf"
                                        :id="estado.cdUf"
                                    ></cidades-pagamento>
                            </ul>
                        </div>
                    </li>
                     `,
        methods: {
            iniciarCollapsible: function () {
                $3('.collapsible').each(function() {
                    $3(this).collapsible();
                    console.log(this);
                });
            }
        }
    })
    Vue.component('cidades-pagamento', {
        props: ['cidade', 'cdEtapa', 'uf', 'cdProduto', 'idpronac'],
        template: ` <li class="active">
                        <div class="collapsible-header blue-text active" style="padding-left: 70px;">
                            <i class="material-icons">place</i>
                            {{ cidade.cidade }}
                        </div>
                        <div class="collapsible-body no-padding margin20 scroll-x">
                            <table class="bordered">
                                <thead>
                                    <tr>
                                        <th>Item de Custo</th>
                                        <th style="text-align: right">Valor Aprovado</th>
                                        <th style="text-align: right">Valor Comprovado</th>
                                        <th style="text-align: right">Valor a Comprovar</th>
                                        <th style="text-align: center"> </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr :item="item"
                                       v-for="(item, index) in cidade.itens"
                                       :key="index"
                                       v-if="isObject(item)">
                                        <td>
                                            {{ item.item }}
                                        </td>
                                        <td style="text-align: right"> R$ {{ converterParaReal(item.varlorAprovado) }} </td>
                                        <td style="text-align: right"> R$ {{ converterParaReal(item.varlorComprovado) }} </td>
                                        <td style="text-align: right"> R$ {{ converterParaReal(item.varlorAprovado - item.varlorComprovado)  }} </td>
                                        <td style="text-align: right"><a class="btn" title="Comprovar item"
                                            :href="'/prestacao-contas/gerenciar/comprovar'
                                               + '/idpronac/' + idpronac
                                               + '/uf/' + uf
                                               + '/produto/' + cdProduto
                                               + '/cidade/' + cidade.cdCidade
                                               + '/etapa/' + cdEtapa
                                               + '/idPlanilhaAprovacao/' + item.idPlanilhaAprovacao
                                               + '/idPlanilhaItens/' + item.idPlanilhaItens"
                                           ><i class="material-icons small">attach_money</i></a></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </li>
                     `,
        methods: {
            iniciarCollapsible: function () {
                $3('.collapsible').each(function() {
                    $3(this).collapsible();
                    console.log(this);
                });
            },
            isObject: function (el) {

                return typeof el === "object";

            },
            converterParaReal: function (value) {
                value = parseFloat(value);
                return numeral(value).format('0,0.00');
            }
        }
    })
    Vue.component('dados', {
        props: ['idpronac'],
        template: `<div>
                            <produtos-pagamento :produtos="produtos" :idpronac="idpronac"></produtos-pagamento>
                    </div>`,
        created: function () {
                // this.iniciarCollapsible();
        },
        mounted: function () {
            let vue = this;
            $3.ajax({
                url: "/prestacao-contas/pagamento/planilha-pagamento/idpronac/" + this.idpronac
            }).done(function( data ) {
                    vue.$data.produtos = data;
                });
        },
        data: function () {
            return {
                produtos: []
            };
        },
        methods: {
            iniciarCollapsible: function () {
                $3('.collapsible').each(function() {
                    $3(this).collapsible();
                    console.log(this);
                });
            }
        }

    })

    var app = new Vue({
        el: '#app',
        methods: {
            iniciarCollapsible: function () {
                $3('.collapsible').each(function () {
                    $3(this).collapsible();
                    console.log(this);
                });
            }
        }
    })

</script>
<script>
    $3(document).ready(function () {

        $3("#visualizar-form").on('click', function () {
            tinymce.remove();
        });

        if ($3('#ir-para-o-topo').length) {
            var scrollTrigger = 100, // px
                backToTop = function () {
                    var scrollTop = $3(window).scrollTop();
                    if (scrollTop > scrollTrigger) {
                        $3('#ir-para-o-topo').parent().show();
                    } else {
                        $3('#ir-para-o-topo').parent().hide();
                    }
                };
            backToTop();

            $3(window).on('scroll', function () {
                backToTop();
            });

            $3('#ir-para-o-topo').on('click', function (e) {
                e.preventDefault();
                $3('html,body').animate({
                    scrollTop: 0
                }, 700);
            });
        }
    });
</script>
<!-- views -->